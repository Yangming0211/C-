# C-
C程序语言的一些代码记录
#include<stdio.h>
//void Swap(int* pa, int* pb)
//{
//	int pu = 0;
//	pu = *pa;
//	*pa = *pb;
//	*pb = pu;
//}
//int main()
//{
//	int a = 8;
//	int b = 89;
//	/*int y = 0;
//	y = a;
//	a = b;
//	b = y;*/
//	printf("a=%d b=%d\n", a, b);
//	Swap(&a, &b);
//	printf("a=%d b=%d\n", a, b);
//	return;
//}
//#include<math.h>
//int is_prime(int n)
//{
//	int j = 0;
//	for (j = 2; j < n; j++)
//	{
//		if (n % j == 0)
//			return 0;
//	}
//	return 1;
//}
//
//int main()
//{
//	int i = 0;
//	for (i = 10; i <= 200; i++)
//	{
//		if (is_prime(i) == 1)
//			printf("%d\n", i);
//	}
//	return 0;
//}
//int binary_search(int bbc[], int k,int sz)
//{
//	int left = 0;
//	int right = sz - 1;
//	while (left <= right)
//	{
//	int mid = (left + right) / 2;
//	if (bbc[mid] < k)
//	{
//		left = mid + 1;
//	}
//	else if (mid > k)
//	{
//		right = mid - 1;
//	}
//	else
//	{
//		return mid;
//	}
//	}
//	return -1;
//}
//int main()
//{
//	int bbc[] = {1,2,3,4,5,6,17,639,26,37,29,36,22,9 };
//	int k = 37;
//	int sz = sizeof(bbc) / sizeof(bbc[0]);
//	int ret = binary_search(bbc, k, sz);
//	if (ret == -1)
//	{
//		printf("找不到该数字\n");
//	}
//	else
//	{
//		printf("返回值下标为：%d\n",ret);
//	}
//	return 0;
//}

//int my_strlen(char* str)
//{
//	if (*str != '\0')
//		return 1 + my_strlen(str+1);
//	else
//		return 0;
//}
//int main()
//{
//	char arr[] = "abthhgj";
//	int len = my_strlen(arr);
//	printf("len= %d\n", len);
//	return 0;
//}
//int main()
//{
//	int arr[3][4] = { {1,2,3,4},{1,2,5,8},{13,42,6,7} };
//	int i = 0;
//	for (i = 0; i < 3; i++)
//	{
//		int j = 0;
//		for (j = 0; j < 4; j++)
//		{
//			printf("   %d", arr[i][j]);
//		}
//		printf("\n");
//	}
//	return 0;
//}
void abc_sort(int arr[], int sz)
{
	int i = 0;
	for (i = 0; i < sz - 1; i++)
	{
		int j = 0;
		for (j = 0; j < sz - 1 - i; j++)
		{
			if (arr[j] > arr[j + 1])
			{
				int tmp = 0;
				tmp = arr[j];
				arr[j] = arr[j + 1];
				arr[j + 1] = tmp;
			}
		}
	}
}
int main()
{
	int arr[] = { 1,23,4,5,6,54,8,6,90 };
	int i = 0;
	int sz = sizeof(arr) / sizeof(arr[0]);
	abc_sort(arr, sz);
	for (i = 0; i < sz; i++)
	{
		printf(" %d", arr[i]);
	}
	return 0;
}
